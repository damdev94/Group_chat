{"ast":null,"code":"var _jsxFileName = \"/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss';\nimport ChannelCard from './channelCard';\nimport MessageCard from './messageCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LayoutChat({\n  channels,\n  messages,\n  addChannel\n}) {\n  _s();\n  const {\n    token,\n    userEmail\n  } = useAuth();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isChannelOpen, setIsChannelOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, SetUserList] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDecription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [channelList, setChannelList] = useState([]);\n  const formRef = useRef(null);\n  useEffect(() => {\n    setChannelList(channels);\n  }, [channels]);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n  const channelClickedName = name => {\n    setChannelOpen(name);\n  };\n  const channelCLickedId = id => {\n    setChannelOpenId(id);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      SetUserList(res.data);\n      res.data.forEach(user => {\n        if (user.email === userEmail) setCurrentUser(user);\n      });\n    }).catch(error => {\n      console.log('Error fetching users infos', error);\n    });\n  }, [token, userEmail]);\n  const handleMessageData = e => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n  const handleNewChannelName = e => {\n    setNewChannelName(e.target.value);\n  };\n  const handleNewChannelDescription = e => {\n    setNewChannelDescription(e.target.value);\n  };\n  const handleCreateMessage = () => {\n    const messageData = {\n      text: newMessage,\n      author: '',\n      channel: channelOpen._id\n    };\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Message Created');\n      setNewMessage('');\n    }).catch(error => {\n      console.log(('Error creating message', error));\n    });\n  };\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDecription\n    };\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Channel created');\n      setNewChannelName('');\n      setNewChannelDescription('');\n      addChannel(res.data);\n    }).catch(error => {\n      console.log('Errror creating channel', error);\n    });\n  };\n  const handleClickOutside = event => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  };\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LayoutChat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'sidebar-open' : ''} `,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleSidebar,\n        className: \"close-icon\",\n        icon: faXmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), isChannelOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-channel\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"iconPlus\",\n            icon: faPlus,\n            onClick: toggleNewChannelForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels\",\n          children: channelList.map(channel => {\n            return /*#__PURE__*/_jsxDEV(ChannelCard, {\n              channel: channel,\n              id: channel._id,\n              toggleSidebar: toggleSidebar,\n              channelClickedName: channelClickedName,\n              channelClickedId: channelCLickedId\n            }, channel._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-login\",\n          children: /*#__PURE__*/_jsxDEV(BottomSidebar, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`,\n        ref: formRef,\n        children: /*#__PURE__*/_jsxDEV(NewChannelForm, {\n          handleCreateChannel: handleCreateChannel,\n          handleNewChannelName: handleNewChannelName,\n          handleNewChannelDescription: handleNewChannelDescription,\n          newChannelDecription: newChannelDecription,\n          newChannelName: newChannelName,\n          toggleNewChannelForm: toggleNewChannelForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"burger-icon\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channelOpen.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.filter(message => channelOpenId === message.channel).map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n          text: message.text,\n          author: message.author,\n          userList: userList\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin-bottom-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-new-message\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            onClick: () => handleCreateMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            value: newMessage,\n            onChange: e => handleMessageData(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutChat, \"T4a/87NbufrdB9/xkVtvLF88lcY=\", false, function () {\n  return [useAuth];\n});\n_c = LayoutChat;\nexport default LayoutChat;\nvar _c;\n$RefreshReg$(_c, \"LayoutChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useAuth","FontAwesomeIcon","faXmark","faBars","faPlus","ChannelCard","MessageCard","NewChannelForm","BottomSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutChat","channels","messages","addChannel","_s","token","userEmail","isSidebarOpen","setIsSidebarOpen","isChannelOpen","setIsChannelOpen","channelOpen","setChannelOpen","channelOpenId","setChannelOpenId","userList","SetUserList","newMessage","setNewMessage","newChannelName","setNewChannelName","newChannelDecription","setNewChannelDescription","isNewChannelOpen","setIsNewChannelOpen","currentUser","setCurrentUser","channelList","setChannelList","formRef","toggleSidebar","toggleNewChannelForm","channelClickedName","name","channelCLickedId","id","get","headers","Authorization","then","res","data","forEach","user","email","catch","error","console","log","handleMessageData","e","target","value","scrollLeft","scrollWidth","handleNewChannelName","handleNewChannelDescription","handleCreateMessage","messageData","text","author","channel","_id","post","handleCreateChannel","channelData","description","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","channelClickedId","ref","filter","message","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss'\nimport ChannelCard from './channelCard';\nimport MessageCard from './messageCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\n\nfunction LayoutChat( {channels, messages, addChannel} ) {\n\n  const {token, userEmail} = useAuth()\n\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true)\n  const [isChannelOpen, setIsChannelOpen] = useState(true)\n  const [channelOpen, setChannelOpen] = useState('')\n  const [channelOpenId, setChannelOpenId] = useState('')\n  const [userList, SetUserList] = useState(null)\n  const [newMessage, setNewMessage] = useState('')\n  const [newChannelName, setNewChannelName] = useState('')\n  const [newChannelDecription, setNewChannelDescription] = useState('')\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false)\n  const [currentUser, setCurrentUser] = useState('')\n  const [channelList, setChannelList] = useState([])\n\n   const formRef = useRef(null);\n\n   useEffect(() => {\n     setChannelList(channels)\n\n   }, [channels])\n\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen)\n  }\n\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen)\n  }\n\n  const channelClickedName = (name) => {\n    setChannelOpen(name)\n  }\n\n  const channelCLickedId = (id) => {\n    setChannelOpenId(id)\n  }\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        SetUserList(res.data)\n        res.data.forEach(user => {\n          if(user.email === userEmail)\n            setCurrentUser(user)\n        });\n      })\n      .catch(error => {\n        console.log('Error fetching users infos', error)\n      })\n\n  }, [token, userEmail])\n\n  const handleMessageData = (e) => {\n    setNewMessage(e.target.value)\n    e.target.scrollLeft = e.target.scrollWidth\n  }\n\n  const handleNewChannelName = (e) => {\n    setNewChannelName(e.target.value)\n  }\n\n  const handleNewChannelDescription = (e) => {\n    setNewChannelDescription(e.target.value)\n  }\n\n  const handleCreateMessage = () => {\n\n    const messageData = {\n      text : newMessage,\n      author : '',\n      channel : channelOpen._id\n    }\n\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(res => {\n      console.log('Message Created')\n      setNewMessage('')\n    })\n    .catch(error => {\n      console.log(('Error creating message', error))\n    })\n  }\n\n  const handleCreateChannel = () => {\n\n    const channelData = {\n      name : newChannelName,\n      description : newChannelDecription\n    }\n\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(res => {\n      console.log('Channel created')\n      setNewChannelName('')\n      setNewChannelDescription('')\n      addChannel(res.data)\n    })\n    .catch(error => {\n      console.log('Errror creating channel', error)\n    })\n  }\n\n  const handleClickOutside = (event) => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false)\n    }\n  }\n\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    };\n  }, [isNewChannelOpen])\n\n  return (\n    <div className='LayoutChat-container'>\n\n      <div className={`sidebar ${isSidebarOpen ? 'sidebar-open' : '' } `}>\n        <FontAwesomeIcon onClick={toggleSidebar} className='close-icon' icon={faXmark} />\n\n        { isChannelOpen ? (\n\n        <>\n          <div className=\"title-channel\">\n            <p>channels</p>\n            <FontAwesomeIcon className='iconPlus' icon={faPlus} onClick={toggleNewChannelForm} />\n          </div>\n\n            <div className='channels'>\n              {channelList.map((channel => {\n                return (<ChannelCard\n                          key={channel._id}\n                          channel={channel}\n                          id={channel._id}\n                          toggleSidebar={toggleSidebar}\n                          channelClickedName = {channelClickedName}\n                          channelClickedId = {channelCLickedId}\n                        />)\n              }))}\n            </div>\n\n            <div className=\"footer-login\">\n\n              <BottomSidebar currentUser={currentUser} />\n\n            </div>\n        </>\n          )\n          : null\n        }\n\n      </div>\n\n      <div className=\"content\">\n\n        <div className={`new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`} ref={formRef}>\n          <NewChannelForm\n            handleCreateChannel={handleCreateChannel}\n            handleNewChannelName={handleNewChannelName}\n            handleNewChannelDescription={handleNewChannelDescription}\n            newChannelDecription={newChannelDecription}\n            newChannelName={newChannelName}\n            toggleNewChannelForm = {toggleNewChannelForm}\n          />\n        </div>\n\n        <div className='banner'>\n\n          <FontAwesomeIcon onClick={() => setIsSidebarOpen(true)} className='burger-icon' icon={faBars} />\n\n          <h1>{channelOpen.name}</h1>\n        </div>\n\n          <div className=\"messages\">\n\n            { messages.filter(message => channelOpenId === message.channel).map(message => (\n              <MessageCard\n                key={message._id}\n                text={message.text}\n                author={message.author}\n                userList={ userList }\n              />\n            ))}\n\n          </div>\n\n          <div className=\"margin-bottom-div\">\n\n          </div>\n\n          <div className=\"new-message\">\n            <div className=\"input-new-message\">\n              <FontAwesomeIcon icon={faPlus} onClick={() => handleCreateMessage()}/>\n              <input type='text' placeholder='Type a message here' value={newMessage} onChange={(e) => handleMessageData(e)}/>\n            </div>\n          </div>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default LayoutChat\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}