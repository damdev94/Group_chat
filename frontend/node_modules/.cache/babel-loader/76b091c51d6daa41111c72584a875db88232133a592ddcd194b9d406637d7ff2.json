{"ast":null,"code":"var _jsxFileName = \"/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss';\nimport ChannelCard from './channelCard';\nimport MessageCard from './messageCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LayoutChat({\n  channels,\n  messages\n}) {\n  _s();\n  const {\n    token,\n    user,\n    userEmail\n  } = useAuth();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isChannelOpen, setIsChannelOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, setUserList] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDescription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const formRef = useRef(null);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n  const channelClickedName = name => {\n    setChannelOpen(name);\n  };\n  const channelClickedId = id => {\n    setChannelOpenId(id);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      setUserList(res.data);\n      const currentUserData = res.data.find(u => u.email === userEmail);\n      if (currentUserData) {\n        setCurrentUser(currentUserData);\n      }\n    }).catch(error => {\n      console.log('Error fetching users infos', error);\n    });\n  }, [token, userEmail]);\n  const handleMessageData = e => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n  const handleNewChannelName = e => {\n    setNewChannelName(e.target.value);\n  };\n  const handleNewChannelDescription = e => {\n    setNewChannelDescription(e.target.value);\n  };\n  const handleCreateMessage = () => {\n    const messageData = {\n      text: newMessage,\n      author: user._id,\n      channel: channelOpen._id\n    };\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Message Created');\n      setNewMessage('');\n    }).catch(error => {\n      console.log('Error creating message', error);\n    });\n  };\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDescription\n    };\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Channel created');\n      setNewChannelName('');\n      setNewChannelDescription('');\n    }).catch(error => {\n      console.log('Error creating channel', error);\n    });\n  };\n  const handleClickOutside = useCallback(event => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  }, [formRef]);\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen, handleClickOutside]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LayoutChat-container\",\n    children: [console.log('layout'), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'sidebar-open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleSidebar,\n        className: \"close-icon\",\n        icon: faXmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), isChannelOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-channel\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"iconPlus\",\n            icon: faPlus,\n            onClick: toggleNewChannelForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels\",\n          children: channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelCard, {\n            channel: channel,\n            id: channel._id,\n            toggleSidebar: toggleSidebar,\n            channelClickedName: channelClickedName,\n            channelClickedId: channelClickedId\n          }, channel._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`,\n        ref: formRef,\n        children: /*#__PURE__*/_jsxDEV(NewChannelForm, {\n          handleCreateChannel: handleCreateChannel,\n          handleNewChannelName: handleNewChannelName,\n          handleNewChannelDescription: handleNewChannelDescription,\n          newChannelDescription: newChannelDescription,\n          newChannelName: newChannelName,\n          toggleNewChannelForm: toggleNewChannelForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"burger-icon\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channelOpen.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.filter(message => channelOpenId === message.channel).map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n          text: message.text,\n          author: message.author,\n          userList: userList\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin-bottom-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-new-message\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            onClick: () => handleCreateMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            value: newMessage,\n            onChange: handleMessageData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutChat, \"11M3I0PfeBicF0GzH8kCc/cYS38=\", false, function () {\n  return [useAuth];\n});\n_c = LayoutChat;\nexport default LayoutChat;\nvar _c;\n$RefreshReg$(_c, \"LayoutChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","useAuth","FontAwesomeIcon","faXmark","faBars","faPlus","ChannelCard","MessageCard","NewChannelForm","BottomSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutChat","channels","messages","_s","token","user","userEmail","isSidebarOpen","setIsSidebarOpen","isChannelOpen","setIsChannelOpen","channelOpen","setChannelOpen","channelOpenId","setChannelOpenId","userList","setUserList","newMessage","setNewMessage","newChannelName","setNewChannelName","newChannelDescription","setNewChannelDescription","isNewChannelOpen","setIsNewChannelOpen","currentUser","setCurrentUser","formRef","toggleSidebar","toggleNewChannelForm","channelClickedName","name","channelClickedId","id","get","headers","Authorization","then","res","data","currentUserData","find","u","email","catch","error","console","log","handleMessageData","e","target","value","scrollLeft","scrollWidth","handleNewChannelName","handleNewChannelDescription","handleCreateMessage","messageData","text","author","_id","channel","post","handleCreateChannel","channelData","description","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","filter","message","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport axios from 'axios'\nimport { useAuth } from '../../functions/auth/authContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport '../../css/components/chat_group/layout.scss'\nimport ChannelCard from './channelCard'\nimport MessageCard from './messageCard'\nimport NewChannelForm from './newChannelForm'\nimport BottomSidebar from './bottomSidebar'\n\nfunction LayoutChat({ channels, messages }) {\n  const { token, user, userEmail } = useAuth()\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true)\n  const [isChannelOpen, setIsChannelOpen] = useState(true)\n  const [channelOpen, setChannelOpen] = useState('')\n  const [channelOpenId, setChannelOpenId] = useState('')\n  const [userList, setUserList] = useState(null)\n  const [newMessage, setNewMessage] = useState('')\n  const [newChannelName, setNewChannelName] = useState('')\n  const [newChannelDescription, setNewChannelDescription] = useState('')\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false)\n  const [currentUser, setCurrentUser] = useState('')\n\n  const formRef = useRef(null)\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen)\n  }\n\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen)\n  }\n\n  const channelClickedName = (name) => {\n    setChannelOpen(name)\n  }\n\n  const channelClickedId = (id) => {\n    setChannelOpenId(id)\n  }\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:5000/userinfos', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        setUserList(res.data)\n        const currentUserData = res.data.find((u) => u.email === userEmail)\n        if (currentUserData) {\n          setCurrentUser(currentUserData);\n        }\n      })\n      .catch((error) => {\n        console.log('Error fetching users infos', error)\n      })\n  }, [token, userEmail])\n\n  const handleMessageData = (e) => {\n    setNewMessage(e.target.value)\n    e.target.scrollLeft = e.target.scrollWidth\n  }\n\n  const handleNewChannelName = (e) => {\n    setNewChannelName(e.target.value)\n  }\n\n  const handleNewChannelDescription = (e) => {\n    setNewChannelDescription(e.target.value)\n  }\n\n  const handleCreateMessage = () => {\n    const messageData = {\n      text: newMessage,\n      author: user._id,\n      channel: channelOpen._id,\n    }\n\n    axios\n      .post('http://localhost:5000/chat/message', messageData, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log('Message Created')\n        setNewMessage('')\n      })\n      .catch((error) => {\n        console.log('Error creating message', error)\n      })\n  }\n\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDescription,\n    }\n\n    axios\n      .post('http://localhost:5000/chat', channelData, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log('Channel created')\n        setNewChannelName('')\n        setNewChannelDescription('')\n      })\n      .catch((error) => {\n        console.log('Error creating channel', error)\n      })\n  }\n\n  const handleClickOutside = useCallback(\n    (event) => {\n      if (formRef.current && !formRef.current.contains(event.target)) {\n        setIsNewChannelOpen(false)\n      }\n    },\n    [formRef]\n  )\n\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [isNewChannelOpen, handleClickOutside])\n\n  return (\n    <div className='LayoutChat-container'>\n      {console.log('layout')}\n      <div className={`sidebar ${isSidebarOpen ? 'sidebar-open' : ''}`}>\n        <FontAwesomeIcon onClick={toggleSidebar} className='close-icon' icon={faXmark} />\n\n        {isChannelOpen && (\n          <>\n            <div className='title-channel'>\n              <p>channels</p>\n              <FontAwesomeIcon className='iconPlus' icon={faPlus} onClick={toggleNewChannelForm} />\n            </div>\n\n            <div className='channels'>\n              {channels.map((channel) => (\n                <ChannelCard\n                  key={channel._id}\n                  channel={channel}\n                  id={channel._id}\n                  toggleSidebar={toggleSidebar}\n                  channelClickedName={channelClickedName}\n                  channelClickedId={channelClickedId}\n                />\n              ))}\n            </div>\n\n            <div className='footer-login'>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className='content'>\n        <div className={`new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`} ref={formRef}>\n          <NewChannelForm\n            handleCreateChannel={handleCreateChannel}\n            handleNewChannelName={handleNewChannelName}\n            handleNewChannelDescription={handleNewChannelDescription}\n            newChannelDescription={newChannelDescription}\n            newChannelName={newChannelName}\n            toggleNewChannelForm={toggleNewChannelForm}\n          />\n        </div>\n\n        <div className='banner'>\n          <FontAwesomeIcon onClick={() => setIsSidebarOpen(true)} className='burger-icon' icon={faBars} />\n          <h1>{channelOpen.name}</h1>\n        </div>\n\n        <div className='messages'>\n          {messages\n            .filter((message) => channelOpenId === message.channel)\n            .map((message) => (\n              <MessageCard key={message._id} text={message.text} author={message.author} userList={userList} />\n            ))}\n        </div>\n\n        <div className='margin-bottom-div'></div>\n\n        <div className='new-message'>\n          <div className='input-new-message'>\n            <FontAwesomeIcon icon={faPlus} onClick={() => handleCreateMessage()} />\n            <input type='text' placeholder='Type a message here' value={newMessage} onChange={handleMessageData} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutChat\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}