{"ast":null,"code":"var _jsxFileName = \"/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss';\nimport ChannelCard from './channelCard';\nimport MessageCard from './messageCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LayoutChat({\n  channels,\n  messages\n}) {\n  _s();\n  const {\n    token,\n    user\n  } = useAuth();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isChannelOpen, setIsChannelOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, SetUserList] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  let [messagesToDisplay, setMessageToDisplay] = useState([]);\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n  const channelClickedName = name => {\n    setChannelOpen(name);\n  };\n  const channelCLickedId = id => {\n    setChannelOpenId(id);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      SetUserList(res.data);\n    }).catch(error => {\n      console.log('Error fetching users infos', error);\n    });\n  }, [token]);\n  const handleMessageData = message => {\n    setNewMessage(message);\n  };\n  const handleCreateMessage = () => {\n    const currentUser = user;\n    const messageData = {\n      text: newMessage,\n      author: currentUser._id,\n      channel: channelOpen._id\n    };\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Message Created');\n      setMessageToDisplay = [...messagesToDisplay, res.data];\n      setNewMessage('');\n    }).catch(error => {\n      console.log(('Error creating message', error));\n    });\n  };\n  useEffect(() => {\n    if (messages) {\n      setMessageToDisplay(messages);\n    }\n  }, []);\n  useEffect(() => {\n    const filteredMessages = messagesToDisplay.filter(message => message.channel === channelOpenId);\n    setMessageToDisplay(filteredMessages);\n  }, [messagesToDisplay, channelOpenId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LayoutChat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'sidebar-open' : ''} `,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => setIsSidebarOpen(false),\n        className: \"close-icon\",\n        icon: faXmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), isChannelOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-channel\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"iconPlus\",\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels\",\n          children: channels.map(channel => {\n            return /*#__PURE__*/_jsxDEV(ChannelCard, {\n              channel: channel,\n              id: channel._id,\n              closeSidebar: closeSidebar,\n              channelClickedName: channelClickedName,\n              channelClickedId: channelCLickedId\n            }, channel._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"burger-icon\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channelOpen.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messagesToDisplay ? messagesToDisplay.map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n          text: message.text,\n          author: message.author,\n          userList: userList\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)) : 'no messages'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-new-message\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            onClick: () => handleCreateMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            value: newMessage,\n            onChange: e => handleMessageData(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutChat, \"rKuRCjm9nKEkYEyK6UnEX4UIazk=\", false, function () {\n  return [useAuth];\n});\n_c = LayoutChat;\nexport default LayoutChat;\nvar _c;\n$RefreshReg$(_c, \"LayoutChat\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","FontAwesomeIcon","faXmark","faBars","faPlus","ChannelCard","MessageCard","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutChat","channels","messages","_s","token","user","isSidebarOpen","setIsSidebarOpen","isChannelOpen","setIsChannelOpen","channelOpen","setChannelOpen","channelOpenId","setChannelOpenId","userList","SetUserList","newMessage","setNewMessage","messagesToDisplay","setMessageToDisplay","closeSidebar","channelClickedName","name","channelCLickedId","id","get","headers","Authorization","then","res","data","catch","error","console","log","handleMessageData","message","handleCreateMessage","currentUser","messageData","text","author","_id","channel","post","filteredMessages","filter","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","channelClickedId","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss'\nimport ChannelCard from './channelCard';\nimport MessageCard from './messageCard';\n\nfunction LayoutChat( {channels, messages} ) {\n\n  const {token, user} = useAuth()\n\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true)\n  const [isChannelOpen, setIsChannelOpen] = useState(true)\n  const [channelOpen, setChannelOpen] = useState('')\n  const [channelOpenId, setChannelOpenId] = useState('')\n  const [userList, SetUserList] = useState(null)\n  const [newMessage, setNewMessage] = useState('')\n  let [messagesToDisplay, setMessageToDisplay] = useState([])\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false)\n  }\n\n  const channelClickedName = (name) => {\n    setChannelOpen(name)\n  }\n\n  const channelCLickedId = (id) => {\n    setChannelOpenId(id)\n  }\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        SetUserList(res.data)\n      })\n      .catch(error => {\n        console.log('Error fetching users infos', error)\n      })\n\n  }, [token])\n\n  const handleMessageData = (message) => {\n    setNewMessage(message)\n  }\n\n  const handleCreateMessage = () => {\n\n    const currentUser = user\n\n    const messageData = {\n      text : newMessage,\n      author : currentUser._id,\n      channel : channelOpen._id\n    }\n\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(res => {\n      console.log('Message Created')\n      setMessageToDisplay = ([...messagesToDisplay, res.data])\n      setNewMessage('')\n    })\n    .catch(error => {\n      console.log(('Error creating message', error))\n    })\n  }\n\n  useEffect(() => {\n    if (messages){\n      setMessageToDisplay(messages)\n    }\n\n  }, [])\n\n\n  useEffect(() => {\n\n    const filteredMessages = messagesToDisplay.filter((message) => message.channel === channelOpenId)\n\n    setMessageToDisplay(filteredMessages)\n\n  }, [messagesToDisplay, channelOpenId])\n\n\n\n  return (\n    <div className='LayoutChat-container'>\n\n      <div className={`sidebar ${isSidebarOpen ? 'sidebar-open' : '' } `}>\n        <FontAwesomeIcon onClick={() => setIsSidebarOpen(false)} className='close-icon' icon={faXmark} />\n\n        { isChannelOpen ? (\n\n        <>\n          <div className=\"title-channel\">\n            <p>channels</p>\n            <FontAwesomeIcon className='iconPlus' icon={faPlus} />\n          </div>\n\n            <div className='channels'>\n              {channels.map((channel => {\n                return (<ChannelCard\n                          key={channel._id}\n                          channel={channel}\n                          id={channel._id}\n                          closeSidebar={closeSidebar}\n                          channelClickedName = {channelClickedName}\n                          channelClickedId = {channelCLickedId}\n                        />)\n              }))}\n            </div>\n        </>\n          )\n          : null\n        }\n\n      </div>\n\n      <div className=\"content\">\n\n        <div className='banner'>\n\n          <FontAwesomeIcon onClick={() => setIsSidebarOpen(true)} className='burger-icon' icon={faBars} />\n\n          <h1>{channelOpen.name}</h1>\n        </div>\n\n          <div className=\"messages\">\n\n          {messagesToDisplay ? messagesToDisplay.map(message => (\n            <MessageCard\n              key={message._id}\n              text={message.text}\n              author={message.author}\n              userList={userList}\n            />\n          ))\n          : 'no messages'\n          }\n\n\n          </div>\n\n          <div className=\"new-message\">\n            <div className=\"input-new-message\">\n              <FontAwesomeIcon icon={faPlus} onClick={() => handleCreateMessage()}/>\n              <input type='text' placeholder='Type a message here' value={newMessage} onChange={(e) => handleMessageData(e.target.value)}/>\n            </div>\n          </div>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default LayoutChat\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAQ,mCAAmC;AAC3E,OAAO,6CAA6C;AACpD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,UAAUA,CAAE;EAACC,QAAQ;EAAEC;AAAQ,CAAC,EAAG;EAAAC,EAAA;EAE1C,MAAM;IAACC,KAAK;IAAEC;EAAI,CAAC,GAAGhB,OAAO,CAAC,CAAC;EAG/B,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAI,CAACgC,iBAAiB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAE3D,MAAMkC,YAAY,GAAGA,CAAA,KAAM;IACzBb,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMc,kBAAkB,GAAIC,IAAI,IAAK;IACnCX,cAAc,CAACW,IAAI,CAAC;EACtB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;IAC/BX,gBAAgB,CAACW,EAAE,CAAC;EACtB,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACqC,GAAG,CAAC,iCAAiC,EAAE;MAC3CC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUvB,KAAK;MAChC;IACF,CAAC,CAAC,CACCwB,IAAI,CAACC,GAAG,IAAI;MACXd,WAAW,CAACc,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;IAClD,CAAC,CAAC;EAEN,CAAC,EAAE,CAAC5B,KAAK,CAAC,CAAC;EAEX,MAAM+B,iBAAiB,GAAIC,OAAO,IAAK;IACrCnB,aAAa,CAACmB,OAAO,CAAC;EACxB,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAEhC,MAAMC,WAAW,GAAGjC,IAAI;IAExB,MAAMkC,WAAW,GAAG;MAClBC,IAAI,EAAGxB,UAAU;MACjByB,MAAM,EAAGH,WAAW,CAACI,GAAG;MACxBC,OAAO,EAAGjC,WAAW,CAACgC;IACxB,CAAC;IAEDtD,KAAK,CAACwD,IAAI,CAAC,oCAAoC,EAAEL,WAAW,EAAE;MAC5Db,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUvB,KAAK;MAChC;IACF,CAAC,CAAC,CACDwB,IAAI,CAACC,GAAG,IAAI;MACXI,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9Bf,mBAAmB,GAAI,CAAC,GAAGD,iBAAiB,EAAEW,GAAG,CAACC,IAAI,CAAE;MACxDb,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,EAAE,wBAAwB,EAAEF,KAAK,CAAC,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC;EAED7C,SAAS,CAAC,MAAM;IACd,IAAIe,QAAQ,EAAC;MACXiB,mBAAmB,CAACjB,QAAQ,CAAC;IAC/B;EAEF,CAAC,EAAE,EAAE,CAAC;EAGNf,SAAS,CAAC,MAAM;IAEd,MAAM0D,gBAAgB,GAAG3B,iBAAiB,CAAC4B,MAAM,CAAEV,OAAO,IAAKA,OAAO,CAACO,OAAO,KAAK/B,aAAa,CAAC;IAEjGO,mBAAmB,CAAC0B,gBAAgB,CAAC;EAEvC,CAAC,EAAE,CAAC3B,iBAAiB,EAAEN,aAAa,CAAC,CAAC;EAItC,oBACEf,OAAA;IAAKkD,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBAEnCnD,OAAA;MAAKkD,SAAS,EAAE,WAAWzC,aAAa,GAAG,cAAc,GAAG,EAAE,GAAK;MAAA0C,QAAA,gBACjEnD,OAAA,CAACP,eAAe;QAAC2D,OAAO,EAAEA,CAAA,KAAM1C,gBAAgB,CAAC,KAAK,CAAE;QAACwC,SAAS,EAAC,YAAY;QAACG,IAAI,EAAE3D;MAAQ;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE/F9C,aAAa,gBAEfX,OAAA,CAAAE,SAAA;QAAAiD,QAAA,gBACEnD,OAAA;UAAKkD,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BnD,OAAA;YAAAmD,QAAA,EAAG;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACfzD,OAAA,CAACP,eAAe;YAACyD,SAAS,EAAC,UAAU;YAACG,IAAI,EAAEzD;UAAO;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eAEJzD,OAAA;UAAKkD,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtB/C,QAAQ,CAACsD,GAAG,CAAEZ,OAAO,IAAI;YACxB,oBAAQ9C,OAAA,CAACH,WAAW;cAEViD,OAAO,EAAEA,OAAQ;cACjBnB,EAAE,EAAEmB,OAAO,CAACD,GAAI;cAChBtB,YAAY,EAAEA,YAAa;cAC3BC,kBAAkB,EAAIA,kBAAmB;cACzCmC,gBAAgB,EAAIjC;YAAiB,GALhCoB,OAAO,CAACD,GAAG;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMjB,CAAC;UACZ,CAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,eACR,CAAC,GAEC,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL,CAAC,eAENzD,OAAA;MAAKkD,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAEtBnD,OAAA;QAAKkD,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBAErBnD,OAAA,CAACP,eAAe;UAAC2D,OAAO,EAAEA,CAAA,KAAM1C,gBAAgB,CAAC,IAAI,CAAE;UAACwC,SAAS,EAAC,aAAa;UAACG,IAAI,EAAE1D;QAAO;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEhGzD,OAAA;UAAAmD,QAAA,EAAKtC,WAAW,CAACY;QAAI;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEJzD,OAAA;QAAKkD,SAAS,EAAC,UAAU;QAAAC,QAAA,EAExB9B,iBAAiB,GAAGA,iBAAiB,CAACqC,GAAG,CAACnB,OAAO,iBAChDvC,OAAA,CAACF,WAAW;UAEV6C,IAAI,EAAEJ,OAAO,CAACI,IAAK;UACnBC,MAAM,EAAEL,OAAO,CAACK,MAAO;UACvB3B,QAAQ,EAAEA;QAAS,GAHdsB,OAAO,CAACM,GAAG;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIjB,CACF,CAAC,GACA;MAAa;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CAAC,eAENzD,OAAA;QAAKkD,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BnD,OAAA;UAAKkD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCnD,OAAA,CAACP,eAAe;YAAC4D,IAAI,EAAEzD,MAAO;YAACwD,OAAO,EAAEA,CAAA,KAAMZ,mBAAmB,CAAC;UAAE;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACtEzD,OAAA;YAAO4D,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC,qBAAqB;YAACC,KAAK,EAAE3C,UAAW;YAAC4C,QAAQ,EAAGC,CAAC,IAAK1B,iBAAiB,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1H;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACnD,EAAA,CA7JQH,UAAU;EAAA,QAEKX,OAAO;AAAA;AAAA0E,EAAA,GAFtB/D,UAAU;AA+JnB,eAAeA,UAAU;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}