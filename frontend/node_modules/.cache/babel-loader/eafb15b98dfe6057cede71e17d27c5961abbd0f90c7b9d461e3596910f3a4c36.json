{"ast":null,"code":"var _jsxFileName = \"/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/messageCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss';\nimport ChannelCard from './channelCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LayoutChat({\n  channels,\n  messages\n}) {\n  _s();\n  const {\n    token,\n    userEmail\n  } = useAuth();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, setUserList] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDescription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [channelList, setChannelList] = useState([]);\n  const [messagesList, setMessagesList] = useState([]);\n  const [loadingUserList, setLoadingUserList] = useState(true); // Nouvel état pour gérer le chargement\n\n  const formRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      setUserList(res.data);\n      setLoadingUserList(false); // Marque la fin du chargement des utilisateurs\n      res.data.forEach(user => {\n        if (user.email === userEmail) setCurrentUser(user);\n      });\n    }).catch(error => {\n      console.log('Error fetching users infos', error);\n    });\n  }, [token, userEmail]);\n  useEffect(() => {\n    setChannelList(channels);\n    setMessagesList(messages);\n  }, [channels, messages]);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n  const channelClickedName = name => {\n    setChannelOpen(name);\n  };\n  const channelClickedId = id => {\n    setChannelOpenId(id);\n  };\n  const handleMessageData = e => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n  const handleNewChannelName = e => {\n    setNewChannelName(e.target.value);\n  };\n  const handleNewChannelDescription = e => {\n    setNewChannelDescription(e.target.value);\n  };\n  const handleCreateMessage = () => {\n    const messageData = {\n      text: newMessage,\n      channel: channelOpenId\n    };\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Message Created', res.data);\n      setNewMessage('');\n      // Ajoute le message avec l'auteur complet à la liste des messages\n      setMessagesList([...messagesList, res.data]);\n    }).catch(error => {\n      console.log('Error creating message', error);\n    });\n  };\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDescription\n    };\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Channel created', res.data);\n      setNewChannelName('');\n      setNewChannelDescription('');\n      setChannelList([...channelList, res.data]);\n    }).catch(error => {\n      console.log('Error creating channel', error);\n    });\n  };\n  const handleClickOutside = event => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  };\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LayoutChat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'sidebar-open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleSidebar,\n        className: \"close-icon\",\n        icon: faXmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), isChannelOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-channel\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"iconPlus\",\n            icon: faPlus,\n            onClick: toggleNewChannelForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels\",\n          children: channelList.map(channel => /*#__PURE__*/_jsxDEV(ChannelCard, {\n            channel: channel,\n            id: channel._id,\n            toggleSidebar: toggleSidebar,\n            channelClickedName: channelClickedName,\n            channelClickedId: channelClickedId\n          }, channel._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-login\",\n          children: /*#__PURE__*/_jsxDEV(BottomSidebar, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`,\n        ref: formRef,\n        children: /*#__PURE__*/_jsxDEV(NewChannelForm, {\n          handleCreateChannel: handleCreateChannel,\n          handleNewChannelName: handleNewChannelName,\n          handleNewChannelDescription: handleNewChannelDescription,\n          newChannelDescription: newChannelDescription,\n          newChannelName: newChannelName,\n          toggleNewChannelForm: toggleNewChannelForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"burger-icon\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channelOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messagesList.filter(message => message.channel === channelOpenId).map(message => {\n          const author = userList.find(user => user._id === message.author);\n          // Vérifie si l'auteur existe et que les informations sont chargées\n          if (!author || loadingUserList) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-card-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-infos\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author-avatar\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"loading\",\n                    alt: \"avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"infos\",\n                  children: \"loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, message._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-infos\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:5000${author.photo}`,\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infos\",\n                children: author.pseudo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin-bottom-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-new-message\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            onClick: handleCreateMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            value: newMessage,\n            onChange: e => handleMessageData(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutChat, \"8FC9g/vJzs12R+rbS/6+5M8Ol6s=\", false, function () {\n  return [useAuth];\n});\n_c = LayoutChat;\nexport default LayoutChat;\nvar _c;\n$RefreshReg$(_c, \"LayoutChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useAuth","FontAwesomeIcon","faXmark","faBars","faPlus","ChannelCard","NewChannelForm","BottomSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutChat","channels","messages","_s","token","userEmail","isSidebarOpen","setIsSidebarOpen","channelOpen","setChannelOpen","channelOpenId","setChannelOpenId","userList","setUserList","newMessage","setNewMessage","newChannelName","setNewChannelName","newChannelDescription","setNewChannelDescription","isNewChannelOpen","setIsNewChannelOpen","currentUser","setCurrentUser","channelList","setChannelList","messagesList","setMessagesList","loadingUserList","setLoadingUserList","formRef","get","headers","Authorization","then","res","data","forEach","user","email","catch","error","console","log","toggleSidebar","toggleNewChannelForm","channelClickedName","name","channelClickedId","id","handleMessageData","e","target","value","scrollLeft","scrollWidth","handleNewChannelName","handleNewChannelDescription","handleCreateMessage","messageData","text","channel","post","handleCreateChannel","channelData","description","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","isChannelOpen","map","_id","ref","filter","message","author","find","src","alt","photo","pseudo","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/messageCard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss';\nimport ChannelCard from './channelCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\n\nfunction LayoutChat({ channels, messages }) {\n  const { token, userEmail } = useAuth();\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, setUserList] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDescription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [channelList, setChannelList] = useState([]);\n  const [messagesList, setMessagesList] = useState([]);\n  const [loadingUserList, setLoadingUserList] = useState(true); // Nouvel état pour gérer le chargement\n\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:5000/userinfos', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        setUserList(res.data);\n        setLoadingUserList(false); // Marque la fin du chargement des utilisateurs\n        res.data.forEach((user) => {\n          if (user.email === userEmail) setCurrentUser(user);\n        });\n      })\n      .catch((error) => {\n        console.log('Error fetching users infos', error);\n      });\n  }, [token, userEmail]);\n\n  useEffect(() => {\n    setChannelList(channels);\n    setMessagesList(messages);\n  }, [channels, messages]);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n\n  const channelClickedName = (name) => {\n    setChannelOpen(name);\n  };\n\n  const channelClickedId = (id) => {\n    setChannelOpenId(id);\n  };\n\n  const handleMessageData = (e) => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n\n  const handleNewChannelName = (e) => {\n    setNewChannelName(e.target.value);\n  };\n\n  const handleNewChannelDescription = (e) => {\n    setNewChannelDescription(e.target.value);\n  };\n\n  const handleCreateMessage = () => {\n    const messageData = {\n      text: newMessage,\n      channel: channelOpenId,\n    };\n\n    axios\n      .post('http://localhost:5000/chat/message', messageData, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log('Message Created', res.data);\n        setNewMessage('');\n        // Ajoute le message avec l'auteur complet à la liste des messages\n        setMessagesList([...messagesList, res.data]);\n      })\n      .catch((error) => {\n        console.log('Error creating message', error);\n      });\n  };\n\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDescription,\n    };\n\n    axios\n      .post('http://localhost:5000/chat', channelData, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log('Channel created', res.data);\n        setNewChannelName('');\n        setNewChannelDescription('');\n        setChannelList([...channelList, res.data]);\n      })\n      .catch((error) => {\n        console.log('Error creating channel', error);\n      });\n  };\n\n  const handleClickOutside = (event) => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen]);\n\n  return (\n    <div className='LayoutChat-container'>\n      <div className={`sidebar ${isSidebarOpen ? 'sidebar-open' : ''}`}>\n        <FontAwesomeIcon onClick={toggleSidebar} className='close-icon' icon={faXmark} />\n\n        {isChannelOpen && (\n          <>\n            <div className='title-channel'>\n              <p>channels</p>\n              <FontAwesomeIcon className='iconPlus' icon={faPlus} onClick={toggleNewChannelForm} />\n            </div>\n\n            <div className='channels'>\n              {channelList.map((channel) => (\n                <ChannelCard\n                  key={channel._id}\n                  channel={channel}\n                  id={channel._id}\n                  toggleSidebar={toggleSidebar}\n                  channelClickedName={channelClickedName}\n                  channelClickedId={channelClickedId}\n                />\n              ))}\n            </div>\n\n            <div className='footer-login'>\n              <BottomSidebar currentUser={currentUser} />\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className='content'>\n        <div className={`new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`} ref={formRef}>\n          <NewChannelForm\n            handleCreateChannel={handleCreateChannel}\n            handleNewChannelName={handleNewChannelName}\n            handleNewChannelDescription={handleNewChannelDescription}\n            newChannelDescription={newChannelDescription}\n            newChannelName={newChannelName}\n            toggleNewChannelForm={toggleNewChannelForm}\n          />\n        </div>\n\n        <div className='banner'>\n          <FontAwesomeIcon onClick={() => setIsSidebarOpen(true)} className='burger-icon' icon={faBars} />\n          <h1>{channelOpen}</h1>\n        </div>\n\n        <div className='messages'>\n          {messagesList\n            .filter((message) => message.channel === channelOpenId)\n            .map((message) => {\n              const author = userList.find((user) => user._id === message.author);\n              // Vérifie si l'auteur existe et que les informations sont chargées\n              if (!author || loadingUserList) {\n                return (\n                  <div key={message._id} className='message-card-container'>\n                    <div className='message-infos'>\n                      <div className='author-avatar'>\n                        <img src='loading' alt='avatar' /> {/* Affichage d'un placeholder pendant le chargement */}\n                      </div>\n                      <div className='infos'>loading</div> {/* Placeholder pour le pseudo */}\n                    </div>\n                    <div className='text'>{message.text}</div>\n                  </div>\n                );\n              }\n\n              return (\n                <div key={message._id} className='message-card-container'>\n                  <div className='message-infos'>\n                    <div className='author-avatar'>\n                      <img src={`http://localhost:5000${author.photo}`} alt='avatar' />\n                    </div>\n                    <div className='infos'>{author.pseudo}</div>\n                  </div>\n                  <div className='text'>{message.text}</div>\n                </div>\n              );\n            })}\n        </div>\n\n        <div className='margin-bottom-div'></div>\n\n        <div className='new-message'>\n          <div className='input-new-message'>\n            <FontAwesomeIcon icon={faPlus} onClick={handleCreateMessage} />\n            <input\n              type='text'\n              placeholder='Type a message here'\n              value={newMessage}\n              onChange={(e) => handleMessageData(e)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LayoutChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}