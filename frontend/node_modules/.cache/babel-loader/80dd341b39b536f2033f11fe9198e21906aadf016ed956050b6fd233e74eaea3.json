{"ast":null,"code":"var _jsxFileName = \"/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss';\nimport ChannelCard from './channelCard';\nimport MessageCard from './messageCard';\nimport NewChannelForm from './newChannelForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LayoutChat({\n  channels,\n  messages\n}) {\n  _s();\n  const {\n    token,\n    user,\n    userInfos\n  } = useAuth();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isChannelOpen, setIsChannelOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, SetUserList] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDecription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [userCurrent, setUserCurrent] = useState('');\n  const formRef = useRef(null);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n  const channelClickedName = name => {\n    setChannelOpen(name);\n  };\n  const channelCLickedId = id => {\n    setChannelOpenId(id);\n  };\n  useEffect(() => {\n    setUserCurrent(user);\n  }, [user]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      SetUserList(res.data);\n    }).catch(error => {\n      console.log('Error fetching users infos', error);\n    });\n  }, [token]);\n  const handleMessageData = e => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n  const handleNewChannelName = e => {\n    setNewChannelName(e.target.value);\n  };\n  const handleNewChannelDescription = e => {\n    setNewChannelDescription(e.target.value);\n  };\n  const handleCreateMessage = () => {\n    const currentUser = user;\n    console.log(currentUser._id);\n    const messageData = {\n      text: newMessage,\n      author: currentUser._id,\n      channel: channelOpen._id\n    };\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Message Created');\n      setNewMessage('');\n    }).catch(error => {\n      console.log(('Error creating message', error));\n    });\n  };\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDecription\n    };\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Channel created');\n      setNewChannelName('');\n      setNewChannelDescription('');\n    }).catch(error => {\n      console.log('Errror creating channel', error);\n    });\n  };\n  const handleClickOutside = event => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  };\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LayoutChat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'sidebar-open' : ''} `,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleSidebar,\n        className: \"close-icon\",\n        icon: faXmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), isChannelOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-channel\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"iconPlus\",\n            icon: faPlus,\n            onClick: toggleNewChannelForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels\",\n          children: channels.map(channel => {\n            return /*#__PURE__*/_jsxDEV(ChannelCard, {\n              channel: channel,\n              id: channel._id,\n              toggleSidebar: toggleSidebar,\n              channelClickedName: channelClickedName,\n              channelClickedId: channelCLickedId\n            }, channel._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userInfos ? userInfos.photo : 'loading',\n              alt: \"user-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.pseudo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`,\n        ref: formRef,\n        children: /*#__PURE__*/_jsxDEV(NewChannelForm, {\n          handleCreateChannel: handleCreateChannel,\n          handleNewChannelName: handleNewChannelName,\n          handleNewChannelDescription: handleNewChannelDescription,\n          newChannelDecription: newChannelDecription,\n          newChannelName: newChannelName,\n          toggleNewChannelForm: toggleNewChannelForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"burger-icon\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channelOpen.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.filter(message => channelOpenId === message.channel).map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n          text: message.text,\n          author: message.author,\n          userList: userList\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin-bottom-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-new-message\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            onClick: () => handleCreateMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            value: newMessage,\n            onChange: e => handleMessageData(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutChat, \"twRLVMbAuK+arzcqcVs1I9FYL7c=\", false, function () {\n  return [useAuth];\n});\n_c = LayoutChat;\nexport default LayoutChat;\nvar _c;\n$RefreshReg$(_c, \"LayoutChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useAuth","FontAwesomeIcon","faXmark","faBars","faPlus","ChannelCard","MessageCard","NewChannelForm","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutChat","channels","messages","_s","token","user","userInfos","isSidebarOpen","setIsSidebarOpen","isChannelOpen","setIsChannelOpen","channelOpen","setChannelOpen","channelOpenId","setChannelOpenId","userList","SetUserList","newMessage","setNewMessage","newChannelName","setNewChannelName","newChannelDecription","setNewChannelDescription","isNewChannelOpen","setIsNewChannelOpen","userCurrent","setUserCurrent","formRef","toggleSidebar","toggleNewChannelForm","channelClickedName","name","channelCLickedId","id","get","headers","Authorization","then","res","data","catch","error","console","log","handleMessageData","e","target","value","scrollLeft","scrollWidth","handleNewChannelName","handleNewChannelDescription","handleCreateMessage","currentUser","_id","messageData","text","author","channel","post","handleCreateChannel","channelData","description","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","channelClickedId","src","photo","alt","pseudo","ref","filter","message","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss'\nimport ChannelCard from './channelCard';\nimport MessageCard from './messageCard';\nimport NewChannelForm from './newChannelForm';\n\nfunction LayoutChat( {channels, messages} ) {\n\n  const {token, user, userInfos} = useAuth()\n\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true)\n  const [isChannelOpen, setIsChannelOpen] = useState(true)\n  const [channelOpen, setChannelOpen] = useState('')\n  const [channelOpenId, setChannelOpenId] = useState('')\n  const [userList, SetUserList] = useState(null)\n  const [newMessage, setNewMessage] = useState('')\n  const [newChannelName, setNewChannelName] = useState('')\n  const [newChannelDecription, setNewChannelDescription] = useState('')\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false)\n  const [userCurrent, setUserCurrent] = useState('')\n\n   const formRef = useRef(null);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen)\n  }\n\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen)\n  }\n\n  const channelClickedName = (name) => {\n    setChannelOpen(name)\n  }\n\n  const channelCLickedId = (id) => {\n    setChannelOpenId(id)\n  }\n\n  useEffect(() => {\n    setUserCurrent(user)\n\n  }, [user])\n\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        SetUserList(res.data)\n      })\n      .catch(error => {\n        console.log('Error fetching users infos', error)\n      })\n\n  }, [token])\n\n  const handleMessageData = (e) => {\n    setNewMessage(e.target.value)\n    e.target.scrollLeft = e.target.scrollWidth\n  }\n\n  const handleNewChannelName = (e) => {\n    setNewChannelName(e.target.value)\n  }\n\n  const handleNewChannelDescription = (e) => {\n    setNewChannelDescription(e.target.value)\n  }\n\n  const handleCreateMessage = () => {\n\n    const currentUser = user\n    console.log(currentUser._id)\n\n    const messageData = {\n      text : newMessage,\n      author : currentUser._id,\n      channel : channelOpen._id\n    }\n\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(res => {\n      console.log('Message Created')\n      setNewMessage('')\n    })\n    .catch(error => {\n      console.log(('Error creating message', error))\n    })\n  }\n\n  const handleCreateChannel = () => {\n\n    const channelData = {\n      name : newChannelName,\n      description : newChannelDecription\n    }\n\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(res => {\n      console.log('Channel created')\n      setNewChannelName('')\n      setNewChannelDescription('')\n    })\n    .catch(error => {\n      console.log('Errror creating channel', error)\n    })\n  }\n\n  const handleClickOutside = (event) => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false)\n    }\n  }\n\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    };\n  }, [isNewChannelOpen])\n\n  return (\n    <div className='LayoutChat-container'>\n\n      <div className={`sidebar ${isSidebarOpen ? 'sidebar-open' : '' } `}>\n        <FontAwesomeIcon onClick={toggleSidebar} className='close-icon' icon={faXmark} />\n\n        { isChannelOpen ? (\n\n        <>\n          <div className=\"title-channel\">\n            <p>channels</p>\n            <FontAwesomeIcon className='iconPlus' icon={faPlus} onClick={toggleNewChannelForm} />\n          </div>\n\n            <div className='channels'>\n              {channels.map((channel => {\n                return (<ChannelCard\n                          key={channel._id}\n                          channel={channel}\n                          id={channel._id}\n                          toggleSidebar={toggleSidebar}\n                          channelClickedName = {channelClickedName}\n                          channelClickedId = {channelCLickedId}\n                        />)\n              }))}\n            </div>\n\n            <div className=\"footer-login\">\n\n              <div className=\"avatar\">\n                <img src={userInfos ? userInfos.photo : 'loading'}alt='user-avatar'/>\n              </div>\n\n              <div className=\"name\">\n                <p>{user.pseudo}</p>\n              </div>\n            </div>\n        </>\n          )\n          : null\n        }\n\n      </div>\n\n      <div className=\"content\">\n\n        <div className={`new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`} ref={formRef}>\n          <NewChannelForm\n            handleCreateChannel={handleCreateChannel}\n            handleNewChannelName={handleNewChannelName}\n            handleNewChannelDescription={handleNewChannelDescription}\n            newChannelDecription={newChannelDecription}\n            newChannelName={newChannelName}\n            toggleNewChannelForm = {toggleNewChannelForm}\n          />\n        </div>\n\n        <div className='banner'>\n\n          <FontAwesomeIcon onClick={() => setIsSidebarOpen(true)} className='burger-icon' icon={faBars} />\n\n          <h1>{channelOpen.name}</h1>\n        </div>\n\n          <div className=\"messages\">\n\n            { messages.filter(message => channelOpenId === message.channel).map(message => (\n              <MessageCard\n                key={message._id}\n                text={message.text}\n                author={message.author}\n                userList={ userList }\n              />\n            ))}\n\n          </div>\n\n          <div className=\"margin-bottom-div\">\n\n          </div>\n\n          <div className=\"new-message\">\n            <div className=\"input-new-message\">\n              <FontAwesomeIcon icon={faPlus} onClick={() => handleCreateMessage()}/>\n              <input type='text' placeholder='Type a message here' value={newMessage} onChange={(e) => handleMessageData(e)}/>\n            </div>\n          </div>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default LayoutChat\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}