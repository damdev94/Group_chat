{"ast":null,"code":"var _jsxFileName = \"/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss';\nimport ChannelCard from './channelCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LayoutChat({\n  channels,\n  messages\n}) {\n  _s();\n  const {\n    token,\n    userEmail\n  } = useAuth();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isChannelOpen, setIsChannelOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, SetUserList] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDecription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [channelList, setChannelList] = useState([]);\n  const [messagesList, setMessagesList] = useState([]);\n  const [authorInfos, setAuthorInfos] = useState(null);\n  const formRef = useRef(null);\n  useEffect(() => {\n    console.log(userList);\n  }, [userList]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      SetUserList(res.data);\n      res.data.forEach(user => {\n        if (user.email === userEmail) setCurrentUser(user);\n      });\n    }).catch(error => {\n      console.log('Error fetching users infos', error);\n    });\n  }, [token, userEmail]);\n  useEffect(() => {\n    setChannelList(channels);\n    setMessagesList(messages);\n  }, [channels, messages]);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n  const channelClickedName = name => {\n    setChannelOpen(name);\n  };\n  const channelCLickedId = id => {\n    setChannelOpenId(id);\n  };\n  const handleMessageData = e => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n  const handleNewChannelName = e => {\n    setNewChannelName(e.target.value);\n  };\n  const handleNewChannelDescription = e => {\n    setNewChannelDescription(e.target.value);\n  };\n  const handleCreateMessage = () => {\n    const messageData = {\n      text: newMessage,\n      author: '',\n      channel: channelOpen._id\n    };\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Message Created');\n      setNewMessage('');\n      setMessagesList(prevlist => [...prevlist, messageData]);\n    }).catch(error => {\n      console.log(('Error creating message', error));\n    });\n  };\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDecription\n    };\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Channel created');\n      setNewChannelName('');\n      setNewChannelDescription('');\n      setChannelList(prevlist => [...prevlist, channelData]);\n    }).catch(error => {\n      console.log('Errror creating channel', error);\n    });\n  };\n  const handleClickOutside = event => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  };\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LayoutChat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'sidebar-open' : ''} `,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleSidebar,\n        className: \"close-icon\",\n        icon: faXmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), isChannelOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-channel\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"iconPlus\",\n            icon: faPlus,\n            onClick: toggleNewChannelForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels\",\n          children: channelList.map(channel => {\n            return /*#__PURE__*/_jsxDEV(ChannelCard, {\n              channel: channel,\n              id: channel._id,\n              toggleSidebar: toggleSidebar,\n              channelClickedName: channelClickedName,\n              channelClickedId: channelCLickedId\n            }, channel._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-login\",\n          children: /*#__PURE__*/_jsxDEV(BottomSidebar, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`,\n        ref: formRef,\n        children: /*#__PURE__*/_jsxDEV(NewChannelForm, {\n          handleCreateChannel: handleCreateChannel,\n          handleNewChannelName: handleNewChannelName,\n          handleNewChannelDescription: handleNewChannelDescription,\n          newChannelDecription: newChannelDecription,\n          newChannelName: newChannelName,\n          toggleNewChannelForm: toggleNewChannelForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"burger-icon\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channelOpen.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messagesList.filter(message => message.channel === channelOpenId).map(message => {\n          const author = userList.find(user => user._id === message.author);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-infos\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: author ? `http://localhost:5000${author.photo}` : 'loading',\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infos\",\n                children: author ? author.pseudo : 'loading'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin-bottom-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-new-message\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            onClick: () => handleCreateMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            value: newMessage,\n            onChange: e => handleMessageData(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutChat, \"h7Hl8Iwvbl5jbUad3PHQa5ZDRIw=\", false, function () {\n  return [useAuth];\n});\n_c = LayoutChat;\nexport default LayoutChat;\nvar _c;\n$RefreshReg$(_c, \"LayoutChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useAuth","FontAwesomeIcon","faXmark","faBars","faPlus","ChannelCard","NewChannelForm","BottomSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutChat","channels","messages","_s","token","userEmail","isSidebarOpen","setIsSidebarOpen","isChannelOpen","setIsChannelOpen","channelOpen","setChannelOpen","channelOpenId","setChannelOpenId","userList","SetUserList","newMessage","setNewMessage","newChannelName","setNewChannelName","newChannelDecription","setNewChannelDescription","isNewChannelOpen","setIsNewChannelOpen","currentUser","setCurrentUser","channelList","setChannelList","messagesList","setMessagesList","authorInfos","setAuthorInfos","formRef","console","log","get","headers","Authorization","then","res","data","forEach","user","email","catch","error","toggleSidebar","toggleNewChannelForm","channelClickedName","name","channelCLickedId","id","handleMessageData","e","target","value","scrollLeft","scrollWidth","handleNewChannelName","handleNewChannelDescription","handleCreateMessage","messageData","text","author","channel","_id","post","prevlist","handleCreateChannel","channelData","description","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","channelClickedId","ref","filter","message","find","src","photo","alt","pseudo","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../css/components/chat_group/layout.scss'\nimport ChannelCard from './channelCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\n\nfunction LayoutChat( {channels, messages} ) {\n\n  const {token, userEmail} = useAuth()\n\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true)\n  const [isChannelOpen, setIsChannelOpen] = useState(true)\n  const [channelOpen, setChannelOpen] = useState('')\n  const [channelOpenId, setChannelOpenId] = useState('')\n  const [userList, SetUserList] = useState(null)\n  const [newMessage, setNewMessage] = useState('')\n  const [newChannelName, setNewChannelName] = useState('')\n  const [newChannelDecription, setNewChannelDescription] = useState('')\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false)\n  const [currentUser, setCurrentUser] = useState('')\n  const [channelList, setChannelList] = useState([])\n  const [messagesList, setMessagesList] = useState([])\n  const [authorInfos, setAuthorInfos] = useState(null)\n\n   const formRef = useRef(null);\n\n   useEffect(() => {\n     console.log(userList)\n\n   }, [userList])\n\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        SetUserList(res.data)\n        res.data.forEach(user => {\n          if(user.email === userEmail)\n            setCurrentUser(user)\n        });\n      })\n      .catch(error => {\n        console.log('Error fetching users infos', error)\n      })\n\n  }, [token, userEmail])\n\n   useEffect(() => {\n     setChannelList(channels)\n     setMessagesList(messages)\n\n   }, [channels, messages])\n\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen)\n  }\n\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen)\n  }\n\n  const channelClickedName = (name) => {\n    setChannelOpen(name)\n  }\n\n  const channelCLickedId = (id) => {\n    setChannelOpenId(id)\n  }\n\n  const handleMessageData = (e) => {\n    setNewMessage(e.target.value)\n    e.target.scrollLeft = e.target.scrollWidth\n  }\n\n  const handleNewChannelName = (e) => {\n    setNewChannelName(e.target.value)\n  }\n\n  const handleNewChannelDescription = (e) => {\n    setNewChannelDescription(e.target.value)\n  }\n\n  const handleCreateMessage = () => {\n\n    const messageData = {\n      text : newMessage,\n      author : '',\n      channel : channelOpen._id\n    }\n\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(res => {\n      console.log('Message Created')\n      setNewMessage('')\n      setMessagesList(prevlist => [...prevlist, messageData])\n    })\n    .catch(error => {\n      console.log(('Error creating message', error))\n    })\n  }\n\n  const handleCreateChannel = () => {\n\n    const channelData = {\n      name : newChannelName,\n      description : newChannelDecription\n    }\n\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then(res => {\n      console.log('Channel created')\n      setNewChannelName('')\n      setNewChannelDescription('')\n      setChannelList(prevlist => [...prevlist, channelData])\n    })\n    .catch(error => {\n      console.log('Errror creating channel', error)\n    })\n  }\n\n  const handleClickOutside = (event) => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false)\n    }\n  }\n\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    };\n  }, [isNewChannelOpen])\n\n  return (\n    <div className='LayoutChat-container'>\n\n      <div className={`sidebar ${isSidebarOpen ? 'sidebar-open' : '' } `}>\n        <FontAwesomeIcon onClick={toggleSidebar} className='close-icon' icon={faXmark} />\n\n        { isChannelOpen ? (\n\n        <>\n          <div className=\"title-channel\">\n            <p>channels</p>\n            <FontAwesomeIcon className='iconPlus' icon={faPlus} onClick={toggleNewChannelForm} />\n          </div>\n\n            <div className='channels'>\n              {channelList.map((channel => {\n                return (<ChannelCard\n                          key={channel._id}\n                          channel={channel}\n                          id={channel._id}\n                          toggleSidebar={toggleSidebar}\n                          channelClickedName = {channelClickedName}\n                          channelClickedId = {channelCLickedId}\n                        />)\n              }))}\n            </div>\n\n            <div className=\"footer-login\">\n\n              <BottomSidebar currentUser={currentUser} />\n\n            </div>\n        </>\n          )\n          : null\n        }\n\n      </div>\n\n      <div className=\"content\">\n\n        <div className={`new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`} ref={formRef}>\n          <NewChannelForm\n            handleCreateChannel={handleCreateChannel}\n            handleNewChannelName={handleNewChannelName}\n            handleNewChannelDescription={handleNewChannelDescription}\n            newChannelDecription={newChannelDecription}\n            newChannelName={newChannelName}\n            toggleNewChannelForm = {toggleNewChannelForm}\n          />\n        </div>\n\n        <div className='banner'>\n\n          <FontAwesomeIcon onClick={() => setIsSidebarOpen(true)} className='burger-icon' icon={faBars} />\n\n          <h1>{channelOpen.name}</h1>\n        </div>\n\n          <div className='messages'>\n          {messagesList\n            .filter((message) => message.channel === channelOpenId)\n            .map((message) => {\n              const author = userList.find((user) => user._id === message.author);\n              return (\n                <div key={message._id} className='message-card-container'>\n                  <div className='message-infos'>\n                    <div className='author-avatar'>\n                      <img src={author ? `http://localhost:5000${author.photo}` : 'loading'} alt='avatar' />\n                    </div>\n                    <div className='infos'>{author ? author.pseudo : 'loading'}</div>\n                  </div>\n                  <div className='text'>{message.text}</div>\n                </div>\n              );\n            })}\n        </div>\n\n          <div className=\"margin-bottom-div\">\n\n          </div>\n\n          <div className=\"new-message\">\n            <div className=\"input-new-message\">\n              <FontAwesomeIcon icon={faPlus} onClick={() => handleCreateMessage()}/>\n              <input type='text' placeholder='Type a message here' value={newMessage} onChange={(e) => handleMessageData(e)}/>\n            </div>\n          </div>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default LayoutChat\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}