{"ast":null,"code":"var _jsxFileName = \"/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../../css/components/chat_group/layout.scss';\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport DropdownUser from '../dropdownUser';\nimport ChannelCard from './channelCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\nimport MessageCard from './messageCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LayoutChat({\n  channels,\n  messages\n}) {\n  _s();\n  const {\n    token,\n    userEmail\n  } = useAuth();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, setUserList] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDescription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [channelList, setChannelList] = useState([]);\n  const [messagesList, setMessagesList] = useState([]);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const formRef = useRef(null);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      setUserList(res.data);\n      res.data.forEach(user => {\n        if (user.email === userEmail) setCurrentUser(user);\n      });\n    }).catch(error => {\n      console.log('Error fetching users infos', error);\n    });\n  }, [token, userEmail]);\n  useEffect(() => {\n    setChannelList(channels);\n    setMessagesList(messages);\n  }, [channels, messages]);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n  const channelClickedName = name => {\n    setChannelOpen(name);\n  };\n  const channelClickedId = id => {\n    setChannelOpenId(id);\n  };\n  const handleMessageData = e => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n  const handleNewChannelName = e => {\n    setNewChannelName(e.target.value);\n  };\n  const handleNewChannelDescription = e => {\n    setNewChannelDescription(e.target.value);\n  };\n  const handleCreateMessage = () => {\n    const currentDate = new Date();\n    const messageData = {\n      text: newMessage,\n      author: currentUser._id,\n      channel: channelOpen._id,\n      date: currentDate.toISOString()\n    };\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Message Created');\n      setNewMessage('');\n      setMessagesList(prevlist => [...prevlist, messageData]);\n    }).catch(error => {\n      console.log(('Error creating message', error));\n    });\n  };\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDescription\n    };\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log('Channel created');\n      setNewChannelName('');\n      setNewChannelDescription('');\n      setChannelList(prevlist => [...prevlist, channelData]);\n    }).catch(error => {\n      console.log('Error creating channel', error);\n    });\n  };\n  const handleClickOutside = event => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  };\n  const toggleUserMenu = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  const parentComponentCss = {\n    bottom: '55px',\n    top: '-140px'\n  };\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen]);\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      console.log(event.key);\n      /* handleCreateMessage() */\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LayoutChat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'sidebar-open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: toggleSidebar,\n        className: \"close-icon\",\n        icon: faXmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-channel\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"iconPlus\",\n            icon: faPlus,\n            onClick: toggleNewChannelForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels\",\n          children: channelList.map(channel => /*#__PURE__*/_jsxDEV(ChannelCard, {\n            channel: channel,\n            id: channel._id,\n            toggleSidebar: toggleSidebar,\n            channelClickedName: channelClickedName,\n            channelClickedId: channelClickedId\n          }, channel._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-login\",\n          onClick: toggleUserMenu,\n          children: [/*#__PURE__*/_jsxDEV(BottomSidebar, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(DropdownUser, {\n            css: parentComponentCss\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`,\n        ref: formRef,\n        children: /*#__PURE__*/_jsxDEV(NewChannelForm, {\n          handleCreateChannel: handleCreateChannel,\n          handleNewChannelName: handleNewChannelName,\n          handleNewChannelDescription: handleNewChannelDescription,\n          newChannelDescription: newChannelDescription,\n          newChannelName: newChannelName,\n          toggleNewChannelForm: toggleNewChannelForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"burger-icon\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channelOpen.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messagesList.filter(message => message.channel === channelOpenId).map(message => {\n          const author = userList.find(user => user._id === message.author);\n          return /*#__PURE__*/_jsxDEV(MessageCard, {\n            author: author,\n            message: message\n          }, message._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin-bottom-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-new-message\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            onClick: () => handleCreateMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message here\",\n            value: newMessage,\n            onChange: e => handleMessageData(e),\n            ref: inputRef,\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(LayoutChat, \"k1K7qspLHvaLayA+1si+wZlyQfU=\", false, function () {\n  return [useAuth];\n});\n_c = LayoutChat;\nexport default LayoutChat;\nvar _c;\n$RefreshReg$(_c, \"LayoutChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useAuth","FontAwesomeIcon","faXmark","faBars","faPlus","DropdownUser","ChannelCard","NewChannelForm","BottomSidebar","MessageCard","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutChat","channels","messages","_s","token","userEmail","isSidebarOpen","setIsSidebarOpen","channelOpen","setChannelOpen","channelOpenId","setChannelOpenId","userList","setUserList","newMessage","setNewMessage","newChannelName","setNewChannelName","newChannelDescription","setNewChannelDescription","isNewChannelOpen","setIsNewChannelOpen","currentUser","setCurrentUser","channelList","setChannelList","messagesList","setMessagesList","isDropdownOpen","setIsDropdownOpen","formRef","inputRef","get","headers","Authorization","then","res","data","forEach","user","email","catch","error","console","log","toggleSidebar","toggleNewChannelForm","channelClickedName","name","channelClickedId","id","handleMessageData","e","target","value","scrollLeft","scrollWidth","handleNewChannelName","handleNewChannelDescription","handleCreateMessage","currentDate","Date","messageData","text","author","_id","channel","date","toISOString","post","prevlist","handleCreateChannel","channelData","description","handleClickOutside","event","current","contains","toggleUserMenu","parentComponentCss","bottom","top","document","addEventListener","removeEventListener","handleKeyDown","key","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","css","ref","filter","message","find","type","placeholder","onChange","onKeyDown","_c","$RefreshReg$"],"sources":["/home/damien/Documents/code projects/Chat_Group/frontend/src/components/chat_group/layoutChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../../css/components/chat_group/layout.scss'\nimport { useAuth } from '../../functions/auth/authContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBars, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport DropdownUser from '../dropdownUser';\nimport ChannelCard from './channelCard';\nimport NewChannelForm from './newChannelForm';\nimport BottomSidebar from './bottomSidebar';\nimport MessageCard from './messageCard';\n\n\nfunction LayoutChat({ channels, messages }) {\n  const { token, userEmail } = useAuth();\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [channelOpen, setChannelOpen] = useState('');\n  const [channelOpenId, setChannelOpenId] = useState('');\n  const [userList, setUserList] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n  const [newChannelDescription, setNewChannelDescription] = useState('');\n  const [isNewChannelOpen, setIsNewChannelOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [channelList, setChannelList] = useState([]);\n  const [messagesList, setMessagesList] = useState([]);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  const formRef = useRef(null);\n  const inputRef = useRef(null)\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/userinfos', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        setUserList(res.data);\n        res.data.forEach(user => {\n          if (user.email === userEmail)\n            setCurrentUser(user);\n        });\n      })\n      .catch(error => {\n        console.log('Error fetching users infos', error);\n      });\n  }, [token, userEmail]);\n\n  useEffect(() => {\n    setChannelList(channels);\n    setMessagesList(messages);\n  }, [channels, messages]);\n\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const toggleNewChannelForm = () => {\n    setIsNewChannelOpen(!isNewChannelOpen);\n  };\n\n  const channelClickedName = (name) => {\n    setChannelOpen(name);\n  };\n\n  const channelClickedId = (id) => {\n    setChannelOpenId(id);\n  };\n\n  const handleMessageData = (e) => {\n    setNewMessage(e.target.value);\n    e.target.scrollLeft = e.target.scrollWidth;\n  };\n\n  const handleNewChannelName = (e) => {\n    setNewChannelName(e.target.value);\n  };\n\n  const handleNewChannelDescription = (e) => {\n    setNewChannelDescription(e.target.value);\n  };\n\n  const handleCreateMessage = () => {\n\n    const currentDate = new Date()\n\n    const messageData = {\n      text: newMessage,\n      author: currentUser._id,\n      channel: channelOpen._id,\n      date: currentDate.toISOString(),\n    };\n\n    axios.post('http://localhost:5000/chat/message', messageData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        console.log('Message Created');\n        setNewMessage('');\n        setMessagesList(prevlist => [...prevlist, messageData]);\n      })\n      .catch(error => {\n        console.log(('Error creating message', error));\n      });\n  };\n\n  const handleCreateChannel = () => {\n    const channelData = {\n      name: newChannelName,\n      description: newChannelDescription\n    };\n\n    axios.post('http://localhost:5000/chat', channelData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        console.log('Channel created');\n        setNewChannelName('');\n        setNewChannelDescription('');\n        setChannelList(prevlist => [...prevlist, channelData]);\n      })\n      .catch(error => {\n        console.log('Error creating channel', error);\n      });\n  };\n\n  const handleClickOutside = (event) => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setIsNewChannelOpen(false);\n    }\n  };\n\n  const toggleUserMenu = () => {\n    setIsDropdownOpen(!isDropdownOpen)\n  }\n\n  const parentComponentCss = { bottom: '55px', top: '-140px'};\n\n  useEffect(() => {\n    if (isNewChannelOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isNewChannelOpen]);\n\n  const handleKeyDown = (event) => {\n\n    if (event.key === 'Enter'){\n      console.log(event.key)\n      /* handleCreateMessage() */\n    }\n  }\n\n  return (\n\n    <div className='LayoutChat-container'>\n\n      <div className={`sidebar ${isSidebarOpen ? 'sidebar-open' : ''}`}>\n        <FontAwesomeIcon onClick={toggleSidebar} className='close-icon' icon={faXmark} />\n\n\n          <>\n            <div className=\"title-channel\">\n              <p>channels</p>\n              <FontAwesomeIcon className='iconPlus' icon={faPlus} onClick={toggleNewChannelForm} />\n            </div>\n\n            <div className='channels'>\n              {channelList.map((channel) => (\n                <ChannelCard\n                  key={channel._id}\n                  channel={channel}\n                  id={channel._id}\n                  toggleSidebar={toggleSidebar}\n                  channelClickedName={channelClickedName}\n                  channelClickedId={channelClickedId}\n                />\n              ))}\n            </div>\n\n            <div className=\"footer-login\" onClick={toggleUserMenu}>\n              <BottomSidebar currentUser={currentUser} />\n              {isDropdownOpen && (\n\n                <DropdownUser css= {parentComponentCss} />\n\n              )}\n            </div>\n          </>\n\n      </div>\n\n      <div className=\"content\">\n        <div className={`new-channel ${isNewChannelOpen ? 'new-channel-open' : ''}`} ref={formRef}>\n          <NewChannelForm\n            handleCreateChannel={handleCreateChannel}\n            handleNewChannelName={handleNewChannelName}\n            handleNewChannelDescription={handleNewChannelDescription}\n            newChannelDescription={newChannelDescription}\n            newChannelName={newChannelName}\n            toggleNewChannelForm={toggleNewChannelForm}\n          />\n        </div>\n\n        <div className='banner'>\n          <FontAwesomeIcon onClick={() => setIsSidebarOpen(true)} className='burger-icon' icon={faBars} />\n          <h1>{channelOpen.name}</h1>\n        </div>\n\n        <div className='messages'>\n\n          {messagesList\n            .filter((message) => message.channel === channelOpenId)\n            .map((message) => {\n              const author = userList.find((user) => user._id === message.author);\n\n              return (\n               <MessageCard\n                key={message._id}\n                author={author}\n                message = {message}\n               />\n              );\n            })}\n        </div>\n\n        <div className=\"margin-bottom-div\"></div>\n\n        <div className=\"new-message\">\n          <div className=\"input-new-message\">\n            <FontAwesomeIcon icon={faPlus} onClick={() => handleCreateMessage()} />\n            <input\n              type='text'\n              placeholder='Type a message here'\n              value={newMessage}\n              onChange={(e) => handleMessageData(e)}\n              ref={inputRef}\n              onKeyDown={handleKeyDown}\n            />\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default LayoutChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}